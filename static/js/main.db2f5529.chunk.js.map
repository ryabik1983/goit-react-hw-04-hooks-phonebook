{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css"],"names":["module","exports","ContactForm","state","name","number","nameInputId","nanoid","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","className","styles","contact_form","this","label","htmlFor","input","type","onChange","pattern","title","placeholder","id","required","submit","Component","Filter","filter","ContactsList","renderContacts","deleteContact","list","map","el","item","span","btn","onClick","App","contacts","formSubmitData","newItem","some","alert","prevStates","changeFilter","toLowerCaseFilter","toLowerCase","includes","prevState","localStorage","getItem","console","log","parsedContacts","JSON","parse","prevProps","snapshot","setItem","stringify","showModal","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.db2f5529.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_form\":\"ContactForm_contact_form__OcpYs\",\"label\":\"ContactForm_label__383NX\",\"input\":\"ContactForm_input__1Xf8U\",\"submit\":\"ContactForm_submit__3hMvx\"};","import React, { Component } from 'react';\r\nimport styles from './ContactForm.module.css';\r\nimport { nanoid } from 'nanoid';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  nameInputId = nanoid();\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    // console.log(this.state);\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n  reset = () => {\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={styles.contact_form} onSubmit={this.handleSubmit}>\r\n        <label className={styles.label} htmlFor={this.nameInputId}>\r\n          Name\r\n          <input\r\n            className={styles.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            onChange={this.handleChange}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            placeholder=\"Ivan Dulin\"\r\n            id={this.nameInputId}\r\n            required\r\n          />\r\n        </label>\r\n        <label className={styles.label}>\r\n          Number\r\n          <input\r\n            className={styles.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            onChange={this.handleChange}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            placeholder=\"067-233-15-14\"\r\n            required\r\n          />\r\n        </label>\r\n        <button className={styles.submit} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nexport default ContactForm;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <div className={styles.filter}>\r\n      <label className={styles.label}>\r\n        Find contacts by name\r\n        <input\r\n          className={styles.input}\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={onChange}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactList.module.css';\r\n\r\nconst ContactsList = ({ renderContacts, deleteContact }) => {\r\n  return (\r\n    <ul className={styles.list}>\r\n      {renderContacts.map(el => {\r\n        return (\r\n          <li className={styles.item} key={el.id}>\r\n            <span className={styles.span}>\r\n              {el.name}: {el.number}\r\n            </span>\r\n            <button\r\n              className={styles.btn}\r\n              type=\"button\"\r\n              id={el.id}\r\n              onClick={() => {\r\n                deleteContact(el.id);\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactsList.propTypes = {\r\n  renderContacts: PropTypes.array.isRequired,\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactsList;","import React, { Component } from 'react';\nimport { nanoid } from 'nanoid';\n\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactsList from './components/ContactList/ContactList';\n// import Modal from './components/Modal/Modal';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n    name: '',\n    number: '',\n    // showModal: false,\n  };\n\n  // toggleModal = () => {\n  //   this.setState(({ showModal }) => ({\n  //     showModal: !showModal,\n  //   }));\n  // };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    console.log(contacts);\n    const parsedContacts = JSON.parse(contacts);\n    console.log(parsedContacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n  // componentDidMount() {\n  //   const contacts = JSON.parse(localStorage.getItem('contacts'));\n  //   console.log('App componentDidMount');\n\n  //   if (contacts) {\n  //     this.setState({ contacts: contacts });\n  //   }\n  // }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    console.log('App Component update');\n    console.log(prevState);\n    console.log(this.state);\n\n    if (this.state.contacts !== prevState.contacts) {\n      console.log('Update Contacts');\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n    // if (prevProps.contacts !== this.state.contacts) {\n    //   console.log('Обновилось поле contacts');\n    //   localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    // }\n  }\n  formSubmitData = ({ name, number }) => {\n    const newItem = { id: nanoid(), name: name, number: number };\n    let isUnique = this.state.contacts.some(el => el.name === name);\n    if (!isUnique) {\n      this.setState(prevStates => ({\n        contacts: [...prevStates.contacts, newItem],\n      }));\n    } else {\n      alert(`${name} is already in contacts`);\n    }\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  renderContacts = () => {\n    const { filter, contacts } = this.state;\n    const toLowerCaseFilter = filter.toLowerCase();\n    return contacts.filter(el =>\n      el.name.toLowerCase().includes(toLowerCaseFilter),\n    );\n  };\n\n  deleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(el => el.id !== id),\n    }));\n  };\n\n  render() {\n    console.log('App render');\n\n    const { contacts, filter, showModal } = this.state;\n    return (\n      <main className=\"main\">\n        {/* <div>\n          <button type=\"button\" onClick={this.toggleModal}>\n            Open modal\n          </button>\n          {showModal && (\n            <Modal onClose={this.toggleModal}>\n              <h1>Hello!</h1>\n              <p>#lorem ipsum dolor</p>\n              <button type=\"button\" onClick={this.toggleModal}>\n                Close modal\n              </button>\n            </Modal>\n          )}\n        </div> */}\n        <h1 className=\"title\">Phonebook</h1>\n        <ContactForm onSubmit={this.formSubmitData} />\n        <h2 className=\"title\">Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactsList\n          renderContacts={this.renderContacts()}\n          deleteContact={this.deleteContact}\n        />\n      </main>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1pho2\",\"item\":\"ContactList_item__3OXWy\",\"btn\":\"ContactList_btn___M_my\",\"span\":\"ContactList_span__2PQQx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1dfn5\",\"input\":\"Filter_input__LSwXe\"};"],"sourceRoot":""}